#!/bin/bash

if ! which brew; then 
    echo "Homebrew is not installed.  Please install that first."
    echo "http://brew.sh"
    exit 1
fi

brew install tmux
brew install ack
brew install reattach-to-user-namespace
brew install python
brew install wget
brew install leiningen
brew install the_silver_searcher
pip install powerline-status
pip install psutil

# NOTE: by default homebrew does not compile emacs with os x
# specific options, the standard emacs is missing the following:
# toolbar-mode are not functions and will error during init
# sqlplus mode uses an image format that is not supported
# ctrl-arrow keys do not work properly

# This does appear to work:
# brew install emacs --cocoa --srbg
# However, if emacs is already installed brew will not re-install
# it and its not easy to determine if it was installed correctly
# whereas it is easy to determine if emacsformacosx is already
# installed correctly.
if [ ! -d /Applications/Emacs.app ]; then
    wget http://emacsformacosx.com/emacs-builds/Emacs-24.5-1-universal.dmg
    hdiutil mount -noautoopen -mountpoint Installer Emacs-24.5-1-universal.dmg
    cp -r Installer/Emacs.app /Applications/
    hdiutil unmount Installer

    FILENAME='gnu.emacs.daemon.plist'
    USERNAME="$(whoami)"
    DIRNAME='/Library/LaunchAgents'

    rm -f ${FILENAME} && touch ${FILENAME} && \
    echo '<?xml version="1.0" encoding="UTF-8"?>'                              >> ${FILENAME} && \
    echo '<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN"'                >> ${FILENAME} && \
    echo '    "http://www.apple.com/DTDs/PropertyList-1.0.dtd">'               >> ${FILENAME} && \
    echo '<plist version="1.0">'                                               >> ${FILENAME} && \
    echo '  <dict>'                                                            >> ${FILENAME} && \
    echo '    <key>Label</key>'                                                >> ${FILENAME} && \
    echo '    <string>gnu.emacs.daemon</string>'                               >> ${FILENAME} && \
    echo '    <key>ProgramArguments</key>'                                     >> ${FILENAME} && \
    echo '    <array>'                                                         >> ${FILENAME} && \
    echo '      <string>/Applications/Emacs.app/Contents/MacOS/Emacs</string>' >> ${FILENAME} && \
    echo '      <string>--daemon</string>'                                     >> ${FILENAME} && \
    echo '    </array>'                                                        >> ${FILENAME} && \
    echo '    <key>RunAtLoad</key>'                                            >> ${FILENAME} && \
    echo '    <true/>'                                                         >> ${FILENAME} && \
    echo '    <key>ServiceDescription</key>'                                   >> ${FILENAME} && \
    echo '    <string>Gnu Emacs Daemon</string>'                               >> ${FILENAME} && \
    echo '    <key>UserName</key>'                                             >> ${FILENAME} && \
    echo "    <string>${USERNAME}</string>"                                    >> ${FILENAME} && \
    echo '  </dict>'                                                           >> ${FILENAME} && \
    echo '</plist>'                                                            >> ${FILENAME} && \
    echo "Creating ${DIRNAME}/${FILENAME}" && \
    sudo cp ${FILENAME} ${DIRNAME} && \
    rm ${FILENAME}

    echo "" >> ~/.bashrc
    echo "export TERM=xterm-256color" >> ~/.bashrc
    echo "alias emacs='/Applications/Emacs.app/Contents/MacOS/Emacs -nw'" >> ~/.bashrc

    echo "" >> ~/.zshrc
    echo "export TERM=xterm-256color" >> ~/.zshrc
    echo "alias emacs='/Applications/Emacs.app/Contents/MacOS/Emacs -nw'" >> ~/.zshrc
fi 

cp fonts/Inconsolata-dz\ for\ Powerline.otf ~/Library/Fonts

# if special font has been selected assume preferences have already been installed
if ! defaults read com.googlecode.iterm2 | grep InconsolataForPowerline-dz; then
    # Cannot change iTerm2 settins while it is running
    # https://code.google.com/p/iterm2/issues/detail?id=1872
    if launchctl list | grep com.googlecode.iterm2; then
	echo "Changes to iTerm2 preferences will be overwritten when iTerm2 is closed."
	echo "Close iTerm2 and rerun this script from the standard terminal"
	open /Applications/Utilities/Terminal.app
	exit 1
    fi

    cp pristine/com.googlecode.iterm2.plist ~/Library/Preferences/.
    # OS X 10.9 caches settings until logout, force it to reload
    defaults read com.googlecode.iterm2 > /dev/null

    # TODO: Could use PlistBuddy to be more explicit about which settings get changed
    # /usr/libexec/PlistBuddy -c "Set :\"New Bookmarks\":0:\"Non Ascii Font\" InconsolataForPowerline-dz 12" ~/Library/Preferences/com.googlecode.iterm2.plist >/dev/null
    # /usr/libexec/PlistBuddy -c "Set :\"New Bookmarks\":0:\"Normal Font\" InconsolataForPowerline-dz 12" ~/Library/Preferences/com.googlecode.iterm2.plist >/dev/null
fi
